---
import '../styles/global.css';
import PortfolioView from '../components/PortfolioView.astro';

const translations = {
  tr: {
    metaDescription:
      '10+ yıllık deneyimiyle .NET Core ve React tabanlı kurumsal uygulamalar geliştiren kıdemli yazılım geliştiricisi.',
    hero: {
      roleLabel: 'Senior Software Developer',
      title: 'Kıdemli Yazılım Geliştirici',
      subtitle:
        '.NET Core ve React ile kurumsal uygulamalar geliştiriyor, performans optimizasyonu ve CI/CD otomasyonu üzerine çalışıyorum.',
      availability: 'Yeni tam zamanlı veya hibrit rollere açık',
      primaryAction: 'Profesyonel deneyim',
      secondaryAction: 'CV talebi gönder',
    },
    metrics: [
      { label: 'Deneyim', value: '10+ yıl', detail: 'kurumsal yazılım' },
      { label: 'Performans iyileştirme', value: '%40', detail: 'API yanıt süresi' },
      { label: 'Hata çözüm süresi', value: '%30', detail: 'CI/CD & debugging' },
    ],
    aside: {
      focusTitle: 'Teknik odaklarım',
      focusDescription:
        'Kurumsal uygulamaları geliştirmede backend ve frontend sorumluluklarını birlikte üstleniyor, kod kalitesi ve dokümantasyonu önceliklendiriyorum.',
      focusListTitle: 'Güncel çalışma başlıkları',
      focusList: [
        '.NET Core servisleri ve React tabanlı arayüzler',
        'CI/CD otomasyonu ve kod gözden geçirme süreçleri',
        'Performans izleme, hata ayıklama ve bilgi paylaşımı',
      ],
      locationLabel: 'Konum',
      locationValue: 'İstanbul, Türkiye · Remote / Hybrid',
      profileLabel: 'LinkedIn',
      profileLink: 'https://www.linkedin.com/in/muslum-guzel-2b60037a',
    },
    experienceSection: {
      navLabel: 'Deneyim',
      label: 'Deneyim',
      title: 'Kurumsal platformlarda odaklı kariyer',
      description:
        'Her rolde backend ve frontend sorumluluklarını birlikte üstlendim; performans, süreç ve dokümantasyon iyileştirmelerine odaklandım.',
    },
    experiences: [
      {
        company: 'Turkish Airlines Technology',
        role: 'Software Developer',
        period: 'Ekim 2020 → Günümüz',
        description:
          'React Admin ve .NET Core tabanlı iç uygulamalar geliştirerek operasyon ekiplerini destekliyorum.',
        highlights: [
          '5+ departmanda kullanılan web uygulamalarını geliştirdim ve devreye aldım.',
          'CI/CD ve yapılandırılmış debugging ile hata çözüm süresini %30 azalttım.',
          'Takımdaki junior geliştiricilere mentorluk yaptım ve dokümantasyon hazırladım.',
        ],
      },
      {
        company: 'Turkcell Teknoloji',
        role: 'Software Developer',
        period: 'Şubat 2018 → Ekim 2020',
        description:
          'ONENT müşteri bilgi sistemini modernleştiren ekipte hem backend hem frontend tarafında görev aldım.',
        highlights: [
          'Entity Framework optimizasyonlarıyla API yanıt sürelerini %40 hızlandırdım.',
          'SCRUM süreçlerine otomatik testleri dahil ettim.',
          'React tabanlı yönetim arayüzleri için yeniden kullanılabilir komponentler geliştirdim.',
        ],
      },
      {
        company: 'Vizyoneks Information Technologies',
        role: 'Software Developer',
        period: 'Eylül 2015 → Şubat 2018',
        description:
          'LIFEIN kurumsal platformunu Ext.Net ve ASP.NET Web Forms ile geliştiren çekirdek ekipteydim.',
        highlights: [
          'Oracle tarafında yüksek hacimli işlemleri destekleyen prosedürler tasarladım.',
          'Modüler ön yüz mimarisiyle bakım maliyetini %20 azalttım.',
          'Dağıtık servis entegrasyonları için yeniden kullanılabilir komponentler hazırladım.',
        ],
      },
      {
        company: 'DDI Technology',
        role: 'Software Developer',
        period: 'Mart 2014 → Eylül 2015',
        description:
          'Kurumsal belge işleme süreçlerini otomatikleştiren çözümler üzerinde çalıştım.',
        highlights: [
          'KOFAX entegrasyonlu belge işleme araçlarını sıfırdan geliştirdim.',
          'Gerçek zamanlı güncellemeler için WCF servislerini devreye aldım.',
          'Uzun vadeli kullanılan ölçeklenebilir servis bileşenleri geliştirdim.',
        ],
      },
      {
        company: 'Dream R&D',
        role: 'Software Developer',
        period: 'Haziran 2013 → Şubat 2014',
        description:
          'Ar-Ge odaklı prototip projelerde modern araç ve çerçeveleri deneyimledim.',
        highlights: [
          'Farklı sektörlere yönelik PoC uygulamalarına katkıda bulundum.',
          'Yeni teknolojilerin uygulanabilirliğini test eden prototipler geliştirdim.',
        ],
      },
    ],
    projectsSection: {
      navLabel: 'Projeler',
      label: 'Seçili Çalışmalar',
      title: 'Öne çıkan sistem çalışmaları',
      description:
        'Büyük ölçekte kullanılan uygulamaların performans, bakım ve süreç taraflarını iyileştiren projeler.',
      caseLabel: 'Detay',
      impactLabel: 'Etkisi',
    },
    projects: [
      {
        name: 'Operasyonel İç Uygulamalar',
        detail:
          'Türk Hava Yolları Teknoloji bünyesinde React Admin ve .NET Core ile geliştirilen süreç otomasyon araçları.',
        impact: 'Beşten fazla departmanda günlük operasyonlarda kullanılan iç ürünler olarak aktif.',
        stack: ['React Admin', '.NET Core', 'CI/CD', 'Azure DevOps'],
      },
      {
        name: 'ONENT Müşteri Bilgi Sistemi',
        detail:
          'Turkcell müşteri bilgilerinin yönetildiği kritik uygulamanın front ve backend modernizasyonu.',
        impact:
          'Entity Framework iyileştirmeleriyle yanıt süreleri %40 azaldı, SCRUM süreçlerine otomatik testler eklendi.',
        stack: ['.NET Core', 'Entity Framework', 'React', 'Automated Testing'],
      },
      {
        name: 'LIFEIN Kurumsal Platformu',
        detail:
          'Ext.Net ve ASP.NET Web Forms tabanlı, yüksek hacimli işlem yapan iş yönetim platformu.',
        impact: 'Modüler mimari ile bakım maliyeti %20 düştü, Oracle prosedürleri yüksek performans sağladı.',
        stack: ['Ext.Net', 'ASP.NET Web Forms', 'Oracle', 'SOLID'],
      },
    ],
    skillsSection: {
      navLabel: 'Uzmanlık',
      label: 'Uzmanlık',
      title: 'Teknik odak alanları',
      description: 'Kod kalitesi, mimari prensipler ve ekip süreçlerinin birlikte yönetildiği çalışmalar.',
    },
    skillGroups: [
      {
        title: 'Diller & Frameworkler',
        items: ['.NET Core', 'C#', 'React', 'JavaScript', 'Ext.Net', 'KnockoutJS'],
      },
      {
        title: 'Mimari & Prensipler',
        items: ['SOLID', 'Clean Architecture', 'Design Patterns', 'Microservices'],
      },
      {
        title: 'Veri & Altyapı',
        items: ['Oracle', 'Entity Framework', 'RESTful API tasarımı', 'SQL optimizasyonu'],
      },
      {
        title: 'Ekip & Süreç',
        items: ['Agile / SCRUM', 'CI/CD', 'TDD', 'Dokümantasyon ve mentorluk'],
      },
    ],
    contactSection: {
      navLabel: 'İletişim',
      label: 'İletişim',
      title: 'Detaylı özgeçmiş veya referans talebi için bana ulaşabilirsiniz.',
      description:
        '.NET Core ve React deneyimi arayan ekiplerle görüşmeye açığım. E-posta veya telefon üzerinden iletişime geçebilirsiniz.',
      note: 'Referans bilgileri talep üzerine paylaşılacaktır.',
      email: 'guzel.muslum8@gmail.com',
      headerCta: 'İletişime Geç',
      languageLabel: 'Dil seçimi',
      footerNote: 'Kurumsal yazılım geliştirme',
    },
    socialLinks: [
      { label: 'E-posta', href: 'mailto:guzel.muslum8@gmail.com', external: false },
      { label: 'Telefon', href: 'tel:+905413197602', external: false },
      { label: 'LinkedIn', href: 'https://www.linkedin.com/in/muslum-guzel-2b60037a', external: true },
      { label: 'GitHub', href: 'https://github.com/muslumguzel', external: true },
      { label: 'Medium', href: 'https://medium.com/@muslumguzel', external: true },
    ],
    languageOptions: [
      { value: 'tr', label: 'Türkçe', abbreviation: 'TR', flag: '🇹🇷' },
      { value: 'en', label: 'English', abbreviation: 'EN', flag: '🇺🇸' },
    ],
  },
  en: {
    metaDescription:
      'Senior software developer with 10+ years delivering .NET Core and React enterprise applications, focusing on performance optimisation and CI/CD automation.',
    hero: {
      roleLabel: 'Senior Software Developer',
      title: 'Senior Software Engineer',
      subtitle:
        'Building enterprise applications with .NET Core and React, improving performance and automation across delivery pipelines.',
      availability: 'Open to new full-time or hybrid roles',
      primaryAction: 'Experience',
      secondaryAction: 'Request CV',
    },
    metrics: [
      { label: 'Experience', value: '10+ years', detail: 'enterprise software' },
      { label: 'Performance gain', value: '40%', detail: 'faster API response' },
      { label: 'Bug resolution', value: '30%', detail: 'faster with CI/CD' },
    ],
    aside: {
      focusTitle: 'Focus areas',
      focusDescription:
        'Delivering backend and frontend features together, maintaining clean codebases and reliable documentation.',
      focusListTitle: 'Current responsibilities',
      focusList: [
        '.NET Core services and React-based admin tools',
        'CI/CD automation and structured code reviews',
        'Performance monitoring, debugging, and knowledge sharing',
      ],
      locationLabel: 'Location',
      locationValue: 'Istanbul, Turkey · Remote / Hybrid',
      profileLabel: 'LinkedIn',
      profileLink: 'https://www.linkedin.com/in/muslum-guzel-2b60037a',
    },
    experienceSection: {
      navLabel: 'Experience',
      label: 'Experience',
      title: 'Career across enterprise platforms',
      description:
        'Led backend and frontend initiatives in every role, improving reliability, performance, and internal team processes.',
    },
    experiences: [
      {
        company: 'Turkish Airlines Technology',
        role: 'Software Developer',
        period: 'Oct 2020 → Present',
        description:
          'Delivering React Admin and .NET Core applications that streamline daily operations for internal teams.',
        highlights: [
          'Launched internal web apps adopted by 5+ departments.',
          'Cut bug resolution time by 30% through CI/CD and structured debugging.',
          'Mentored junior developers and prepared team documentation.',
        ],
      },
      {
        company: 'Turkcell Technology',
        role: 'Software Developer',
        period: 'Feb 2018 → Oct 2020',
        description:
          'Modernised the ONENT customer information system across backend and frontend layers.',
        highlights: [
          'Improved API response speed by 40% via Entity Framework optimisation.',
          'Integrated automated testing into SCRUM release cycles.',
          'Built reusable React components for admin interfaces.',
        ],
      },
      {
        company: 'Vizyoneks Information Technologies',
        role: 'Software Developer',
        period: 'Sep 2015 → Feb 2018',
        description:
          'Core contributor to the LIFEIN enterprise platform using Ext.Net and ASP.NET Web Forms.',
        highlights: [
          'Designed Oracle procedures supporting high-volume transactions.',
          'Reduced maintenance effort by 20% with modular front-end architecture.',
          'Delivered reusable components for distributed service integrations.',
        ],
      },
      {
        company: 'DDI Technology',
        role: 'Software Developer',
        period: 'Mar 2014 → Sep 2015',
        description:
          'Developed automation solutions for enterprise document processing.',
        highlights: [
          'Built KOFAX-integrated document processing tools from scratch.',
          'Deployed WCF services for real-time synchronisation.',
          'Delivered scalable service components adopted long term.',
        ],
      },
      {
        company: 'Dream R&D',
        role: 'Software Developer',
        period: 'Jun 2013 → Feb 2014',
        description:
          'Worked on R&D prototypes, testing modern frameworks in rapid iterations.',
        highlights: [
          'Contributed to proof-of-concept applications across industries.',
          'Built prototypes to evaluate emerging technologies.',
        ],
      },
    ],
    projectsSection: {
      navLabel: 'Projects',
      label: 'Selected Work',
      title: 'Systems with measurable impact',
      description:
        'Initiatives that improved performance, maintainability, and delivery workflows for large-scale applications.',
      caseLabel: 'Details',
      impactLabel: 'Impact',
    },
    projects: [
      {
        name: 'Operational Internal Apps',
        detail:
          'Process automation tools built with React Admin and .NET Core for Turkish Airlines Technology.',
        impact: 'Actively used each day across more than five departments.',
        stack: ['React Admin', '.NET Core', 'CI/CD', 'Azure DevOps'],
      },
      {
        name: 'ONENT Customer Information System',
        detail:
          'Frontend and backend modernisation of Turkcell’s customer information platform.',
        impact:
          'Reduced response times by 40% and introduced automated tests into the SCRUM cadence.',
        stack: ['.NET Core', 'Entity Framework', 'React', 'Automated Testing'],
      },
      {
        name: 'LIFEIN Enterprise Platform',
        detail:
          'High-volume business management platform delivered with Ext.Net and ASP.NET Web Forms.',
        impact:
          'Lowered maintenance overhead by 20% while maintaining performance with Oracle procedures.',
        stack: ['Ext.Net', 'ASP.NET Web Forms', 'Oracle', 'SOLID'],
      },
    ],
    skillsSection: {
      navLabel: 'Skills',
      label: 'Skills',
      title: 'Technical coverage',
      description:
        'Balancing code quality, architecture, and team practices in enterprise deliveries.',
    },
    skillGroups: [
      {
        title: 'Languages & Frameworks',
        items: ['.NET Core', 'C#', 'React', 'JavaScript', 'Ext.Net', 'KnockoutJS'],
      },
      {
        title: 'Architecture & Principles',
        items: ['SOLID', 'Clean Architecture', 'Design Patterns', 'Microservices'],
      },
      {
        title: 'Data & Infrastructure',
        items: ['Oracle', 'Entity Framework', 'REST API design', 'SQL optimisation'],
      },
      {
        title: 'Team & Process',
        items: ['Agile / SCRUM', 'CI/CD', 'TDD', 'Documentation & mentoring'],
      },
    ],
    contactSection: {
      navLabel: 'Contact',
      label: 'Contact',
      title: 'Get in touch for detailed CV or references.',
      description:
        'Open to teams seeking .NET Core and React experience. Reach out via email or phone.',
      note: 'References available upon request.',
      email: 'guzel.muslum8@gmail.com',
      headerCta: 'Contact',
      languageLabel: 'Language switcher',
      footerNote: 'Enterprise software engineering',
    },
    socialLinks: [
      { label: 'Email', href: 'mailto:guzel.muslum8@gmail.com', external: false },
      { label: 'Phone', href: 'tel:+905413197602', external: false },
      { label: 'LinkedIn', href: 'https://www.linkedin.com/in/muslum-guzel-2b60037a', external: true },
      { label: 'GitHub', href: 'https://github.com/muslumguzel', external: true },
      { label: 'Medium', href: 'https://medium.com/@muslumguzel', external: true },
    ],
    languageOptions: [
      { value: 'tr', label: 'Turkish', abbreviation: 'TR', flag: '🇹🇷' },
      { value: 'en', label: 'English', abbreviation: 'EN', flag: '🇺🇸' },
    ],
  },
};

const defaultLang = 'tr';
const meta = {
  title: 'Müslüm GÜZEL · Senior Software Engineer',
  description: translations[defaultLang].metaDescription,
  url: 'https://muslumguzel.com',
};

const base = (import.meta.env.BASE_URL ?? '/').replace(/\/+$/, '');
const faviconUrl = `${base || ''}/favicon.svg`;
---

<!DOCTYPE html>
<html lang={defaultLang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{meta.title}</title>
    <meta name="description" content={meta.description} />
    <meta name="author" content="Müslüm GÜZEL" />
    <meta name="keywords" content=".NET, React, yazılım geliştirici, İstanbul, cloud architect" />
    <link rel="canonical" href={meta.url} />
    <link rel="icon" type="image/svg+xml" href={faviconUrl} />

    <meta property="og:title" content={meta.title} />
    <meta property="og:description" content={meta.description} />
    <meta property="og:type" content="profile" />
    <meta property="og:url" content={meta.url} />
    <meta property="profile:first_name" content="Müslüm" />
    <meta property="profile:last_name" content="GÜZEL" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={meta.title} />
    <meta name="twitter:description" content={meta.description} />

    <style>
      :root {
        color-scheme: dark;
      }

      body[data-active-lang='tr'] [data-view='tr'] {
        display: block;
      }

      body[data-active-lang='tr'] [data-view='en'] {
        display: none;
      }

      body[data-active-lang='en'] [data-view='tr'] {
        display: none;
      }

      body[data-active-lang='en'] [data-view='en'] {
        display: block;
      }
    </style>
  </head>
  <body class="min-h-screen bg-slate-950 text-slate-100 antialiased" data-active-lang={defaultLang}>
    <div id="view-container">
      <PortfolioView content={translations[defaultLang]} lang="tr" />
    </div>

    <template id="view-en">
      <PortfolioView content={translations.en} lang="en" />
    </template>

    <script is:inline>
      const SUPPORTED_LANGS = ['tr', 'en'];
      const viewContainer = document.getElementById('view-container');
      const renderedViews = { tr: viewContainer.querySelector('[data-view=\"tr\"]') };
      const DEFAULT_LANG = document.body.dataset.activeLang || 'tr';

      function getTemplate(lang) {
        const template = document.getElementById(`view-${lang}`);
        return template ? template.content.cloneNode(true) : null;
      }

      function getStoredPreference() {
        const stored = localStorage.getItem('preferredLang');
        if (stored && SUPPORTED_LANGS.indexOf(stored) !== -1) {
          return stored;
        }
        return null;
      }

      function detectBrowserLanguage() {
        const languages = navigator.languages;
        let candidate = null;
        if (Array.isArray(languages) && languages.length > 0) {
          candidate = languages[0];
        }
        if (!candidate && navigator.language) {
          candidate = navigator.language;
        }
        if (!candidate) {
          return DEFAULT_LANG;
        }
        return candidate.toLowerCase().indexOf('tr') === 0 ? 'tr' : 'en';
      }

      let activeLang = DEFAULT_LANG;

      function updateToggleState(view, lang) {
        if (!view) return;
        const toggles = view.querySelectorAll('[data-language-option]');
        for (let i = 0; i < toggles.length; i += 1) {
          const toggle = toggles[i];
          const value = toggle.getAttribute('data-language-option');
          const isActive = value === lang;
          toggle.setAttribute('aria-pressed', isActive ? 'true' : 'false');
          toggle.classList.toggle('is-active', isActive);
        }
      }

      function updateAllToggleStates() {
        for (const key in renderedViews) {
          if (Object.prototype.hasOwnProperty.call(renderedViews, key)) {
            updateToggleState(renderedViews[key], activeLang);
          }
        }
      }

      function bindLanguageControls(view) {
        if (!view) return;
        const toggles = view.querySelectorAll('[data-language-option]');
        for (let i = 0; i < toggles.length; i += 1) {
          const toggle = toggles[i];
          if (toggle.getAttribute('data-bound') === 'true') continue;
          toggle.addEventListener('click', function (event) {
            const target = event.currentTarget.getAttribute('data-language-option');
            if (SUPPORTED_LANGS.indexOf(target) !== -1 && target !== activeLang) {
              setLanguage(target);
            }
          });
          toggle.setAttribute('data-bound', 'true');
        }
        updateToggleState(view, activeLang);
      }

      function setLanguage(lang) {
        if (SUPPORTED_LANGS.indexOf(lang) === -1) return;
        let view = renderedViews[lang];

        if (!view) {
          const fragment = getTemplate(lang);
          if (!fragment) return;
          view = fragment.querySelector('[data-view]');
          renderedViews[lang] = view;
        }

        if (!view) return;

        viewContainer.replaceChildren(view);
        document.body.dataset.activeLang = lang;
        document.documentElement.lang = lang;
        activeLang = lang;
        localStorage.setItem('preferredLang', lang);
        bindLanguageControls(view);
        updateAllToggleStates();
      }

      function initialise() {
        bindLanguageControls(renderedViews.tr);
        const stored = getStoredPreference();
        const preferred = stored || detectBrowserLanguage();
        if (preferred !== activeLang) {
          setLanguage(preferred);
        } else {
          updateAllToggleStates();
        }
      }

      initialise();
    </script>
  </body>
</html>
